<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net48</TargetFramework>
        <PlatformTarget>x64</PlatformTarget>
        <LangVersion>10.0</LangVersion>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <OutputType>Library</OutputType>
        <Configurations>Debug;Custom Version;Main Release;Dev;Patchless</Configurations>
        <Platforms>AnyCPU</Platforms>
        <RootNamespace>Synapse3.SynapseModule</RootNamespace>
        <PackageId>SynapseSL</PackageId>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <PackageVersion>3.0.0-pre1</PackageVersion>
        <Title>Synapse</Title>
        <Authors>Dimenzio, Helight, OneWholesomeDev</Authors>
        <Description>Synapse is a High Level Plugin/Module Server side framework for the Steam Game SCP Secret Laboratory based on Harmony Patches and Neuron.</Description>
        <Copyright>Copyright 2022</Copyright>
        <PackageProjectUrl>https://docs.synapsesl.xyz</PackageProjectUrl>
        <RepositoryUrl>https://synapsesl.xyz</RepositoryUrl>
        <RepositoryType></RepositoryType>
        <PackageTags>Synapse SCP SL SCPSL SCP:SL PluginFramwork ModuleFramework SynapseSL Plugin Plugins Module Modules SCP-SL Secret-Lab SCPSL-Server Secret-Laboratory Dimenzio Helight UselessJavaDevMineTech13</PackageTags>
        <AssemblyVersion>3.0.0</AssemblyVersion>
        <FileVersion>3.0.0</FileVersion>
        <PackageLicenseUrl>https://licenses.nuget.org/GPL-3.0-or-later</PackageLicenseUrl>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <Reference Include="Assembly-CSharp">
          <HintPath>..\Refs\Assembly-CSharp-Publicized.dll</HintPath>
        </Reference>
        <Reference Include="Assembly-CSharp-firstpass">
          <HintPath>..\Refs\Assembly-CSharp-firstpass.dll</HintPath>
        </Reference>
        <Reference Include="CommandSystem.Core">
          <HintPath>..\Refs\CommandSystem.Core.dll</HintPath>
        </Reference>
        <Reference Include="Mirror">
          <HintPath>..\Refs\Mirror_publicized.dll</HintPath>
        </Reference>
        <Reference Include="Mirror.Components">
          <HintPath>..\Refs\Mirror.Components.dll</HintPath>
        </Reference>
        <Reference Include="NorthwoodLib">
          <HintPath>..\Refs\NorthwoodLib.dll</HintPath>
        </Reference>
        <Reference Include="PluginAPI">
          <HintPath>..\Refs\PluginAPI.dll</HintPath>
        </Reference>
        <Reference Include="Pooling">
          <HintPath>..\Refs\Pooling.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine">
            <HintPath>..\Refs\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AnimationModule">
          <HintPath>..\Refs\UnityEngine.AnimationModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AudioModule">
          <HintPath>..\Refs\UnityEngine.AudioModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>..\Refs\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.PhysicsModule">
          <HintPath>..\Refs\UnityEngine.PhysicsModule.dll</HintPath>
        </Reference>
    </ItemGroup>


    <ItemGroup>
      <Compile Remove="OldPatches\**" />
    </ItemGroup>


    <ItemGroup>
      <EmbeddedResource Remove="OldPatches\**" />
    </ItemGroup>


    <ItemGroup>
      <None Remove="OldPatches\**" />
    </ItemGroup>


    <ItemGroup>
      <PackageReference Include="NeuronModding.Core" Version="1.0.2" />
      <PackageReference Include="NeuronModding.Modules.Commands" Version="1.0.2" />
      <PackageReference Include="NeuronModding.Modules.Configs" Version="1.0.2" />
      <PackageReference Include="NeuronModding.Modules.Patcher" Version="1.0.2" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">

    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Main Release' ">
      <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
      <GenerateDocumentationFile>True</GenerateDocumentationFile>
      <DebugType>Portable</DebugType>
      <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
      <DocumentationFile />
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Custom Version' ">
      <Optimize>true</Optimize>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Dev' ">
      <Optimize>true</Optimize>
    </PropertyGroup>

</Project>
